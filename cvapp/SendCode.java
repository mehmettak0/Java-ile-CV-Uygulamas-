/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.cvapp;

import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Properties;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.mail.Address;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;

/**
 *
 * @author hasan
 */
public class SendCode extends javax.swing.JFrame {

    /**
     * Creates new form SendCode
     */
    public SendCode() {
        initComponents();
        setTitle("Send Code Screen");

    }

    class JPanelGradient extends JPanel {
//I made the part below to make a background with transition between 2 colors.

        protected void paintComponent(Graphics g) {
            Graphics2D g2d = (Graphics2D) g;
            int width = getWidth();
            int height = getHeight();

            Color color_1 = new Color(251, 188, 5);
            Color color_2 = new Color(234, 67, 53);

            GradientPaint gp = new GradientPaint(0, 0, color_1, 180, height, color_2);
            g2d.setPaint(gp);
            g2d.fillRect(0, 0, width, height);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new JPanelGradient();
        lbl_tittle = new javax.swing.JLabel();
        lbl_gmailIcon = new javax.swing.JLabel();
        txtField_SendCodeEmailAddress = new javax.swing.JTextField();
        btn_SendCode = new javax.swing.JButton();
        btn_returnLoginScreen = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        lbl_tittle.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        lbl_tittle.setText("Please write the e-mail address to which the code will be sent.");

        lbl_gmailIcon.setIcon(new javax.swing.ImageIcon("C:\\Users\\hasan\\Desktop\\FSMVÜ\\CV UYGULAMASI(FİNAL)\\gmail (1).png")); // NOI18N

        btn_SendCode.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_SendCode.setText("Send code to Email");
        btn_SendCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SendCodeActionPerformed(evt);
            }
        });

        btn_returnLoginScreen.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btn_returnLoginScreen.setText("Return to login screen");
        btn_returnLoginScreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_returnLoginScreenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbl_tittle)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(lbl_gmailIcon)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn_returnLoginScreen)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_SendCode))
                            .addComponent(txtField_SendCodeEmailAddress))))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(lbl_tittle, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_gmailIcon)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(txtField_SendCodeEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_SendCode)
                    .addComponent(btn_returnLoginScreen))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
// I want to ask to users when the winwod closing...
        int SelectedOption = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to close the app?", "Warning", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if (SelectedOption == JOptionPane.YES_OPTION) {
            this.dispose();
        }
        if (SelectedOption == JOptionPane.NO_OPTION) {
            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }

    }//GEN-LAST:event_formWindowClosing

    private void btn_returnLoginScreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_returnLoginScreenActionPerformed

        //// When Return to login screen is clicked, to close this frame and return to the main login screen.
        LoginFrame LoginFrame = new LoginFrame();
        LoginFrame.setVisible(true);
        LoginFrame.pack();
        LoginFrame.setLocationRelativeTo(null);
        LoginFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_btn_returnLoginScreenActionPerformed

    private void btn_SendCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SendCodeActionPerformed

        if (txtField_SendCodeEmailAddress.getText().isEmpty()) {

            JOptionPane.showMessageDialog(null, "This area must not be empty.\nPlease write your Email address.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            //Whether the mail and passwords entered in the login screen are in the database or not has been checked.
            try {
                Connection conn = null;
                Statement stmt_select = null;

                conn = DriverManager.getConnection("jdbc:derby://localhost:1527/CvAppDB", "sa", "as");
                String query_email = "select count(*) as adet from user_info where user_email='" + txtField_SendCodeEmailAddress.getText() + "'";
                stmt_select = conn.createStatement();

                ResultSet rs_check_Email = stmt_select.executeQuery(query_email);
                int email_count = 0;
                while (rs_check_Email.next()) {
                    email_count = rs_check_Email.getInt("adet");
                }
                if (email_count == 0) {
                    JOptionPane.showMessageDialog(null, "The entered mail is not registered in the system.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                } else {

                    //We keep the e-mail address whose password will be changed on the create new screen screen, in the static variable.
                    CreateNewPassword newEmailPassword = new CreateNewPassword(txtField_SendCodeEmailAddress.getText());

                    // Recipient's email ID needs to be mentioned.
                    String to = txtField_SendCodeEmailAddress.getText();

                    // Sender's email ID needs to be mentioned
                    String from = "cv.application.code@gmail.com";

                    // Assuming you are sending email from through gmails smtp
                    String host = "smtp.gmail.com";

                    // Get system properties
                    Properties properties = System.getProperties();

                    // Setup mail server
                    properties.put("mail.smtp.host", host);
                    properties.put("mail.smtp.port", "465");
                    properties.put("mail.smtp.ssl.enable", "true");
                    properties.put("mail.smtp.auth", "true");

                    // Get the Session object.// and pass username and password
                    Session session = Session.getInstance(properties, new javax.mail.Authenticator() {

                        protected PasswordAuthentication getPasswordAuthentication() {

                            return new PasswordAuthentication(from, "29558016578Ma.");

                        }

                    });

                    try {
                        // Create a default MimeMessage object.
                        MimeMessage message = new MimeMessage(session);

                        // Set From: header field of the header.
                        message.setFrom(new InternetAddress(from));

                        // Set To: header field of the header.
                        message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));

                        // Set Subject: header field
                        message.setSubject("Security confirmation code");

                        int code = (int) ((Math.random() * 900000) + 100000);

                        // Now set the actual message
                        message.setText("Security code : " + code);

//                        System.out.println("sending...");
                        // Send message
                        Transport.send(message);
//                        System.out.println("Sent message successfully....");

                        //Now let's save the sent security code to the database.
                        String query_update_code = "update user_info set user_sendcode ='" + Integer.toString(code) + "' where user_email='" + txtField_SendCodeEmailAddress.getText() + "'";
                        PreparedStatement preparedStmt = conn.prepareStatement(query_update_code);

                        // execute the java preparedstatement
                        preparedStmt.executeUpdate();

                        String input_code = JOptionPane.showInputDialog("Plese enter the code sent.");
                        if (input_code.isEmpty()) {
                            JOptionPane.showMessageDialog(null, "Please enter sent code", "Error", JOptionPane.ERROR_MESSAGE);
                            return;
                        } else {
                            Matcher matcher;
                            matcher = Pattern.compile("^[\\d]{6}$").matcher(input_code);
                            if (!matcher.find()) {
                                JOptionPane.showMessageDialog(null, "Please enter 6 digit code\n Your code must be like 123456", "Error", JOptionPane.ERROR_MESSAGE);
                                return;
                            } else {

                                String query_code = "select count(*) as adet from USER_INFO  where user_sendcode = '" + input_code + "' and user_email = '" + txtField_SendCodeEmailAddress.getText() + "'";
                                ResultSet rs_check_code = stmt_select.executeQuery(query_code);
                                int code_count = 0;
                                while (rs_check_code.next()) {
                                    code_count = rs_check_code.getInt("adet");
                                }
                                if (code_count == 0) {
                                    JOptionPane.showMessageDialog(null, "Entered code is incorrect", "Error", JOptionPane.ERROR_MESSAGE);
                                    return;
                                } else {
                                    // If entered code and sent code are same, to close this frame and return to the main login screen.

                                    CreateNewPassword CreateNewPassword = new CreateNewPassword(txtField_SendCodeEmailAddress.getText());
                                    CreateNewPassword.setVisible(true);
                                    CreateNewPassword.pack();
                                    CreateNewPassword.setLocationRelativeTo(null);
                                    CreateNewPassword.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                                    this.dispose();

                                }
                            }

                        }

                    } catch (MessagingException mex) {
                        mex.printStackTrace();
                    }

                }

            } catch (Exception e) {
//                e.printStackTrace();
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }

    }//GEN-LAST:event_btn_SendCodeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SendCode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SendCode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SendCode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SendCode.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SendCode().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_SendCode;
    private javax.swing.JButton btn_returnLoginScreen;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_gmailIcon;
    private javax.swing.JLabel lbl_tittle;
    private javax.swing.JTextField txtField_SendCodeEmailAddress;
    // End of variables declaration//GEN-END:variables
}
